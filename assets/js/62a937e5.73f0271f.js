"use strict";(self.webpackChunkiaindavis_dev=self.webpackChunkiaindavis_dev||[]).push([[9605],{53690:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"/2024/11/09/2024-11-09-designing-distributed-systems-ambassador-sharded-redis/designing-distributed-systems-ambassador-sharded-redis","metadata":{"permalink":"/study/2024/11/09/2024-11-09-designing-distributed-systems-ambassador-sharded-redis/designing-distributed-systems-ambassador-sharded-redis","source":"@site/blog-study/2024-11-09-designing-distributed-systems-ambassador-sharded-redis/2024-11-09-designing-distributed-systems-ambassador-sharded-redis.mdx","title":"Hands-on: Ambassador Pattern -- Sharded Redis","description":"","date":"2024-11-09T00:00:00.000Z","tags":[{"inline":false,"label":"Hands-On Exercise","permalink":"/study/tags/hands-on","description":"Posts documenting hands-on exercises"},{"inline":true,"label":"designing-distributed-systems","permalink":"/study/tags/designing-distributed-systems"}],"readingTime":0.025,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Hands-on: Ambassador Pattern -- Sharded Redis","tags":["hands-on","designing-distributed-systems"]},"unlisted":false,"nextItem":{"title":"designing-distributed-systems-ambassador-ten-percent-experiments","permalink":"/study/2024/11/09/2024-11-09-designing-distributed-systems-ambassador-ten-percent-experiments/designing-distributed-systems-ambassador-ten-percent-experiments"}},"content":"import SolutionDiagram from \'./_fragments/solution-diagram.mdx\'\\n\\n<SolutionDiagram/>"},{"id":"/2024/11/09/2024-11-09-designing-distributed-systems-ambassador-ten-percent-experiments/designing-distributed-systems-ambassador-ten-percent-experiments","metadata":{"permalink":"/study/2024/11/09/2024-11-09-designing-distributed-systems-ambassador-ten-percent-experiments/designing-distributed-systems-ambassador-ten-percent-experiments","source":"@site/blog-study/2024-11-09-designing-distributed-systems-ambassador-ten-percent-experiments/2024-11-09-designing-distributed-systems-ambassador-ten-percent-experiments.mdx","title":"designing-distributed-systems-ambassador-ten-percent-experiments","description":"","date":"2024-11-09T00:00:00.000Z","tags":[],"readingTime":0,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Hands-on: Ambassador Pattern -- Sharded Redis","permalink":"/study/2024/11/09/2024-11-09-designing-distributed-systems-ambassador-sharded-redis/designing-distributed-systems-ambassador-sharded-redis"},"nextItem":{"title":"Hands-On: Sidecar | Topz (Designing Distributed Systems)","permalink":"/study/2024/11/02/2024-11-02-designing-distributed-systems-sidecar-topz/designing-distributed-systems-sidecar-topz"}},"content":""},{"id":"/2024/11/02/2024-11-02-designing-distributed-systems-sidecar-topz/designing-distributed-systems-sidecar-topz","metadata":{"permalink":"/study/2024/11/02/2024-11-02-designing-distributed-systems-sidecar-topz/designing-distributed-systems-sidecar-topz","source":"@site/blog-study/2024-11-02-designing-distributed-systems-sidecar-topz/2024-11-02-designing-distributed-systems-sidecar-topz.mdx","title":"Hands-On: Sidecar | Topz (Designing Distributed Systems)","description":"Sidecar Hands-on Exercise: TOPZ","date":"2024-11-02T12:22:00.000Z","tags":[{"inline":false,"label":"Book | Desigining Distributed Systems","permalink":"/study/tags/designing-distributed-systems","description":"Posts related to the book Designing Distributed Systems (\u201cDesigning Distributed Systems by Brendan Burns (O\u2019Reilly). Copyright 2025 Brendan Burns, 978-1-098-15635-0.\u201d)"},{"inline":false,"label":"Hands-On Exercise","permalink":"/study/tags/hands-on","description":"Posts documenting hands-on exercises"}],"readingTime":1.685,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"Hands-On: Sidecar | Topz (Designing Distributed Systems)","date":"2024-11-02T12:22","tags":["book-designing-distributed-systems","hands-on"]},"unlisted":false,"prevItem":{"title":"designing-distributed-systems-ambassador-ten-percent-experiments","permalink":"/study/2024/11/09/2024-11-09-designing-distributed-systems-ambassador-ten-percent-experiments/designing-distributed-systems-ambassador-ten-percent-experiments"}},"content":"import Expandable from \'@site/src/components/Expandable/Expandable\'\\n\\nimport LocalSetup from \'./_fragments/local-setup.mdx\'\\nimport Challenges from \'./_fragments/challenges.mdx\'\\nimport Solutions from \'./_fragments/solutions.mdx\'\\n\\n## Sidecar Hands-on Exercise: TOPZ\\nThe purpose of this exercise is to explore the \\"sidecar\\" pattern of deploying\\nsoftware using containers and container groups.\\n\\nThis exercise has the reader creating an arbitrary containerised\\napplication and a **sidecar** in the same namespace. The sidecar provides\\nresource monitoring for the virtual host.\\n\\nThe provided instructions use a purpose-built utility called `topz`,\\nand leaves the main application ambiguous (to be determined by the\\nimplementer). The implementation is started using Docker CLI commands.\\n\\nBelow is the exercise as defined in the book\'s text:\\n<Expandable>\\nHands On: Deploying the topz Container\\nTo see the topz sidecar in action, you first need to deploy some other container to act as the application container. Choose an existing application that you are running and deploy it using Docker:\\n>\\n```\\n$ docker run -d <my-app-image>\\n<container-hash-value>\\nAfter you run that image, you will receive the identifier for that specific container. It will look something like: cccf82b85000\u2026\u200b If you don\u2019t have it, you can always look it up using the docker ps command, which will show all currently running containers. Assuming you have stashed that value in an environment variable named APP_ID, you can then run the topz container in the same PID namespace using:\\n```\\n\\n```\\n$ docker run --pid=container:${APP_ID} \\\\\\n    -p 8080:8080 \\\\\\n    brendanburns/topz:db0fa58 \\\\\\n    /server --addr=0.0.0.0:8080\\n```\\nThis will launch the topz sidecar in the same PID namespace as the application container. Note that you may need to change the port that the sidecar uses for serving if your application container is also running on port 8080. Once the sidecar is running, you can visit http://localhost:8080/topz to get a complete readout of the processes that are running in the application container and their resource usage.\\n\\nYou can mix this sidecar with any other existing container to easily get a view into how the container is using its resources via a web interface.\\n</Expandable>\\n\\nTRUNCATE_HERE\\n\\n<LocalSetup/>\\n<Challenges/>\\n<Solutions/>"}]}}')}}]);